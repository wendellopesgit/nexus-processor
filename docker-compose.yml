services:
  app:
    container_name: nexus-processor
    build: .
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - RABBITMQ_URL=amqp://nexus:nexus-challenge@rabbitmq:5672
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://root:nexus-challenge@mongo-db:27017
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      mongo:
        condition: service_healthy
    restart: unless-stopped

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: nexus
      RABBITMQ_DEFAULT_PASS: nexus-challenge
      RABBITMQ_DEFAULT_VHOST: /
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    restart: unless-stopped

  redis:
    container_name: redis
    image: redis:7-alpine
    ports:
      - '6379:6379'
    healthcheck:
      test: redis-cli ping | grep PONG
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - redis-data:/data
    restart: unless-stopped

  mongo:
    container_name: mongo-db
    image: mongo:5.0
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: nexus-challenge
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: mongosh --quiet --eval "db.adminCommand('ping')"
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

volumes:
  mongo-data:
  rabbitmq-data:
  redis-data:
